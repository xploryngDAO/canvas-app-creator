import { geminiService } from './gemini';

export interface PromptEnhanceResponse {
  success: boolean;
  enhancedDescription?: string;
  error?: string;
}

export class PromptEnhanceService {
  /**
   * Aprimora a descri√ß√£o do aplicativo fornecida pelo usu√°rio
   * Analisa e expande os requisitos funcionais necess√°rios
   */
  async enhanceAppDescription(originalDescription: string): Promise<PromptEnhanceResponse> {
    console.log('üöÄ [PROMPT_ENHANCE] Iniciando aprimoramento da descri√ß√£o:', {
      originalLength: originalDescription.length,
      originalPreview: originalDescription.substring(0, 100) + '...'
    });

    if (!originalDescription || originalDescription.trim().length === 0) {
      return {
        success: false,
        error: 'Descri√ß√£o n√£o pode estar vazia'
      };
    }

    // Verificar se o GeminiService est√° configurado
    const apiKey = geminiService.getApiKey();
    if (!apiKey) {
      return {
        success: false,
        error: 'API Key do Gemini n√£o configurada. Configure nas configura√ß√µes primeiro.'
      };
    }

    try {
      const enhancePrompt = this.buildEnhancePrompt(originalDescription);
      console.log('üìù [PROMPT_ENHANCE] Prompt constru√≠do:', {
        promptLength: enhancePrompt.length
      });

      const result = await geminiService.generateWithPrompt(enhancePrompt);
      
      if (result.success && result.content) {
        console.log('‚úÖ [PROMPT_ENHANCE] Descri√ß√£o aprimorada com sucesso:', {
          originalLength: originalDescription.length,
          enhancedLength: result.content.length
        });

        return {
          success: true,
          enhancedDescription: result.content.trim()
        };
      } else {
        console.error('‚ùå [PROMPT_ENHANCE] Erro ao aprimorar descri√ß√£o:', result.error);
        return {
          success: false,
          error: result.error || 'Erro desconhecido ao aprimorar descri√ß√£o'
        };
      }
    } catch (error) {
      console.error('‚ùå [PROMPT_ENHANCE] Erro inesperado:', error);
      return {
        success: false,
        error: error instanceof Error ? error.message : 'Erro inesperado'
      };
    }
  }

  /**
   * Constr√≥i o prompt para aprimoramento da descri√ß√£o
   */
  private buildEnhancePrompt(originalDescription: string): string {
    return `Voc√™ √© um especialista em an√°lise de requisitos de software e desenvolvimento de aplica√ß√µes web. Sua tarefa √© analisar a descri√ß√£o de um aplicativo fornecida pelo usu√°rio e aprimor√°-la significativamente.

DESCRI√á√ÉO ORIGINAL DO USU√ÅRIO:
"${originalDescription}"

INSTRU√á√ïES PARA APRIMORAMENTO:

1. **AN√ÅLISE PROFUNDA**: Analise a descri√ß√£o original e identifique:
   - Funcionalidades expl√≠citas mencionadas
   - Funcionalidades impl√≠citas necess√°rias
   - Requisitos t√©cnicos que ser√£o necess√°rios
   - Integra√ß√µes que podem ser √∫teis

2. **EXPANS√ÉO DETALHADA**: Expanda a descri√ß√£o incluindo:
   - Funcionalidades de autentica√ß√£o e autoriza√ß√£o (se aplic√°vel)
   - Sistema de gerenciamento de dados
   - Interface de usu√°rio intuitiva
   - Funcionalidades de busca e filtros (se relevante)
   - Sistema de notifica√ß√µes (se apropriado)
   - Painel administrativo (se necess√°rio)
   - Relat√≥rios e analytics (se √∫til)
   - Integra√ß√£o com APIs externas (se relevante)
   - Funcionalidades mobile-first e responsivas

3. **MELHORIA DA CLAREZA**: Reescreva a descri√ß√£o de forma:
   - Clara e objetiva
   - T√©cnica mas compreens√≠vel
   - Estruturada e organizada
   - Completa mas concisa

4. **REQUISITOS T√âCNICOS**: Inclua considera√ß√µes sobre:
   - Experi√™ncia do usu√°rio (UX/UI)
   - Performance e otimiza√ß√£o
   - Seguran√ßa e privacidade
   - Acessibilidade
   - Responsividade mobile-first

FORMATO DA RESPOSTA:
Forne√ßa APENAS a descri√ß√£o aprimorada, sem explica√ß√µes adicionais, coment√°rios ou formata√ß√£o markdown. A resposta deve ser um texto corrido que substitua completamente a descri√ß√£o original.

EXEMPLO DE TRANSFORMA√á√ÉO:
Original: "Um e-commerce simples"
Aprimorada: "Uma plataforma de e-commerce completa com cat√°logo de produtos organizados por categorias, sistema de carrinho de compras com c√°lculo autom√°tico de frete, integra√ß√£o com gateways de pagamento (PIX, cart√£o, boleto), gerenciamento de pedidos com acompanhamento em tempo real, √°rea do cliente para hist√≥rico de compras e dados pessoais, painel administrativo para gest√£o de produtos, estoque e vendas, sistema de avalia√ß√µes e coment√°rios de produtos, funcionalidades de busca avan√ßada com filtros por pre√ßo, categoria e marca, sistema de cupons de desconto, notifica√ß√µes por email para confirma√ß√£o de pedidos, e design responsivo otimizado para dispositivos m√≥veis."

Agora apimore a descri√ß√£o fornecida seguindo todas essas diretrizes:`;
  }
}

export const promptEnhanceService = new PromptEnhanceService();